{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["class WebrtcBgModifier {\n    constructor() {\n        this.scriptLoaded = false;\n        this.segmentation = null;\n        this.url = null;\n        this.color = null;\n        this.stream = null;\n        this.brightness = 1;\n        this.contrast = 1;\n        this.grayScale = false;\n        this.blur = 0;\n        this.videoElement = document.createElement(\"video\");\n        this.canvasElement = document.createElement(\"canvas\");\n    }\n\n    // Setters for background properties\n    setBrightness(value) {\n        this.brightness = +value;\n        return this;\n    }\n\n    setContrast(value) {\n        this.contrast = +value;\n        return this;\n    }\n    setBlur(value) {\n        this.blur = +value+\"px\";\n        return this;\n    }\n\n    setGrayScale(value) {\n        this.grayScale = value;\n        return this;\n    }\n\n    setStream(stream) {\n        this.stream = stream;\n        return this;\n    }\n\n    setBackgroundImage(url) {\n        this.url = url;\n        this.color = null;\n        return this;\n    }\n\n    setBackgroundColor(color) {\n        this.color = color;\n        return this;\n    }\n\n    // Appends a script to the document head, ensuring it loads only once\n    async appendScriptToHead(src, {\n        async = true, defer = false, callback = () => {\n        }\n    } = {}) {\n        if (this.scriptLoaded) {\n            await  callback();\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.src = src;\n        script.async = async;\n        script.defer = defer;\n        script.onload =async () => {\n            this.scriptLoaded = true;\n          await  callback();\n        };\n        script.onerror = () => console.error(`Failed to load script: ${src}`);\n        document.head.appendChild(script);\n    }\n\n    // Handles background image replacement logic\n    applyBackgroundImage(ctx, results, backgroundImage) {\n        const {videoWidth: width, videoHeight: height} = this.videoElement;\n        ctx.clearRect(0, 0, width, height);\n        ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast}) blur(${this.blur})`;\n\n        ctx.drawImage(results.segmentationMask, 0, 0, width, height);\n        ctx.globalCompositeOperation = 'source-out';\n\n        ctx.drawImage(backgroundImage ? backgroundImage : this.videoElement, 0, 0, width, height);\n        ctx.globalCompositeOperation = 'destination-atop';\n\n        ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast})`\n        ctx.drawImage(results.image, 0, 0, width, height);\n    }\n\n    // Adjusts brightness and contrast for the video\n    applyBrightnessAndContrast(ctx) {\n        ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast}) `;\n    }\n\n    // Applies a solid background color\n    applyBackgroundColor(ctx, results) {\n        const {videoWidth: width, videoHeight: height} = this.videoElement;\n        ctx.clearRect(0, 0, width, height);\n        ctx.drawImage(results.segmentationMask, 0, 0, width, height);\n        ctx.globalCompositeOperation = 'source-out';\n        ctx.fillStyle = this.color;\n        ctx.fillRect(0, 0, width, height);\n        ctx.globalCompositeOperation = 'destination-atop';\n        ctx.drawImage(results.image, 0, 0, width, height);\n    }\n\n\n    // Applies a grayscale effect\n    applyGrayscale(ctx) {\n        const {videoWidth: width, videoHeight: height} = this.videoElement;\n        const imageData = ctx.getImageData(0, 0, width, height);\n        const data = imageData.data;\n\n        for (let i = 0; i < data.length; i += 4) {\n            const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n            data[i] = data[i + 1] = data[i + 2] = avg;\n        }\n\n        ctx.putImageData(imageData, 0, 0);\n    }\n\n    // Generates a list of available backgrounds\n    backgroundList() {\n        return {\n            color: [\n                {value: '#F9C0AB', alt: '#F9C0AB'},\n                {value: '#F4E0AF', alt: '#F4E0AF'},\n                {value: '#A8CD89', alt: '#A8CD89'},\n                {value: '#355F2E', alt: '#355F2E'},\n            ],\n            image: [\n                {value: 'img/1.jpg', alt: 'Image 1'},\n                {value: 'img/2.jpg', alt: 'Image 2'},\n                {value: 'img/3.jpg', alt: 'Image 3'},\n            ],\n        };\n    }\n\n    // Initializes the segmentation process\n    async setupSegmentation(ctx, backgroundImage) {\n        await this.appendScriptToHead('https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/selfie_segmentation.js', {\n            async: true,\n            callback: async () => {\n                if(! this.segmentation){\n                    this.segmentation = new SelfieSegmentation({\n                        // locateFile: (file) => `/node_modules/@mediapipe/selfie_segmentation/${file}`,\n                        locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`,\n                    });\n                }\n\n\n                this.segmentation.setOptions({modelSelection: 1});\n\n                this.segmentation.onResults((results) => {\n                    if (this.color) {\n                        this.applyBackgroundColor(ctx, results);\n                        this.applyBrightnessAndContrast(ctx);\n                    } else {\n                        this.applyBackgroundImage(ctx, results, backgroundImage);\n                    }\n\n                    if (this.grayScale) {\n                        this.applyGrayscale(ctx);\n                    }\n                    // this.applyBrightnessAndContrast(ctx);\n                });\n\n                await  this.segmentation.initialize();\n\n                const processVideo = async () => {\n                    await  this.segmentation.send({image: this.videoElement});\n                    requestAnimationFrame(processVideo);\n                };\n\n                await processVideo();\n            },\n        });\n    }\n\n    // Main function to modify the video stream\n    async changeBackground() {\n        this.videoElement.srcObject = this.stream;\n        this.videoElement.play();\n\n        await new Promise((resolve) => (this.videoElement.onloadeddata = resolve));\n\n        const {videoWidth: width, videoHeight: height} = this.videoElement;\n        this.canvasElement.width = width;\n        this.canvasElement.height = height;\n        const ctx = this.canvasElement.getContext('2d');\n\n        if (!this.url && !this.grayScale && this.brightness === 1 && this.contrast === 1 && !this.color && !this.blur) {\n            return this.stream; // No modifications, return original stream\n        }\n\n        let backgroundImage = null;\n        if (this.url) {\n            backgroundImage = new Image();\n            backgroundImage.src = this.url;\n            await new Promise((resolve) => (backgroundImage.onload = resolve));\n        }\n\n        await this.setupSegmentation(ctx, backgroundImage);\n        return this.canvasElement.captureStream(30);\n    }\n}\n\nexport default WebrtcBgModifier;"],"names":["constructor","this","scriptLoaded","segmentation","url","color","stream","brightness","contrast","grayScale","blur","videoElement","document","createElement","canvasElement","setBrightness","value","setContrast","setBlur","setGrayScale","setStream","setBackgroundImage","setBackgroundColor","appendScriptToHead","src","async","defer","callback","_exit","_this","_temp2","_result","script","onload","Promise","resolve","then","e","reject","onerror","console","error","head","appendChild","_temp","applyBackgroundImage","ctx","results","backgroundImage","videoWidth","width","videoHeight","height","clearRect","filter","drawImage","segmentationMask","globalCompositeOperation","image","applyBrightnessAndContrast","applyBackgroundColor","fillStyle","fillRect","applyGrayscale","imageData","getImageData","data","i","length","putImageData","backgroundList","alt","setupSegmentation","_this2","SelfieSegmentation","locateFile","file","setOptions","modelSelection","onResults","initialize","processVideo","send","requestAnimationFrame","changeBackground","_this3","srcObject","play","onloadeddata","_temp4","captureStream","getContext","_temp3","Image"],"mappings":"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"}