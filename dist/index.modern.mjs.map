{"version":3,"file":"index.modern.mjs","sources":["../src/index.js"],"sourcesContent":["class WebrtcBgModifier {\n    constructor() {\n        this.scriptLoaded = false;\n        this.segmentation = null;\n        this.url = null;\n        this.camera = null;\n        this.backgroundImage = null;\n        this.color = null;\n        this.stream = null;\n        this.processing = false;\n        this.brightness = 1;\n        this.contrast = 1;\n        this.grayScale = false;\n        this.blur = 0;\n        this.fps = 24;\n        this.ctx = null;\n        this.isMobile = /Mobi|Android/i.test(navigator.userAgent);\n\n        this.videoInfo = {videoWidth: 640, videoHeight: 480};\n        this.videoElement = document.createElement(\"video\");\n        this.canvasElement = document.createElement(\"canvas\");\n    }\n\n    setFps(value) {\n        this.fps = value;\n        return this;\n    }\n\n    // Setters for background properties\n    setBackgroundImage2(value) {\n        this.backgroundImage = value;\n        return this;\n    }\n\n    getBackgroundImage() {\n        return this.backgroundImage\n    }\n\n    setBrightness(value) {\n        this.brightness = +value;\n        return this;\n    }\n\n    setContrast(value) {\n        this.contrast = +value;\n        return this;\n    }\n\n    setBlur(value) {\n        this.blur = +value + \"px\";\n        return this;\n    }\n\n    setGrayScale(value) {\n        this.grayScale = value;\n        return this;\n    }\n\n    setStream(stream) {\n        this.stream = stream;\n        return this;\n    }\n\n    setBackgroundImage(url) {\n        this.url = url;\n        this.color = null;\n        return this;\n    }\n\n    setBackgroundColor(color) {\n        this.color = color;\n\n        return this;\n    }\n\n    // Appends a script to the document head, ensuring it loads only once\n    async appendScriptToHead(src, {\n        async = true, defer = false, callback = () => {\n        }\n    } = {}) {\n        if (this.scriptLoaded) {\n            await callback();\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.src = src;\n        script.async = async;\n        script.defer = defer;\n        script.onload = async () => {\n            this.scriptLoaded = true;\n            await callback();\n        };\n        script.onerror = () => console.error(`Failed to load script: ${src}`);\n        document.head.appendChild(script);\n    }\n\n    // Handles background image replacement logic\n    applyBackgroundImage(results) {\n\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n        // this.ctx.clearRect(0, 0, width, height);\n        // this.ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast}) blur(${this.blur})`;\n        this.ctx.drawImage(results.segmentationMask, 0, 0, width, height);\n        this.ctx.globalCompositeOperation = 'source-out';\n        this.ctx.drawImage(this.getBackgroundImage() ? this.getBackgroundImage() : this.videoElement, 0, 0, width, height);\n        this.ctx.globalCompositeOperation = 'destination-atop';\n\n        // this.ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast})`\n        // this.ctx.drawImage(results.image, 0, 0, width, height);\n\n    }\n\n    // Adjusts brightness and contrast for the video\n    applyBrightnessAndContrast() {\n        this.ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast}) `;\n    }\n\n    // Applies a solid background color\n    applyBackgroundColor(results) {\n\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n        // this.ctx.clearRect(0, 0, width, height);\n        this.ctx.drawImage(results.segmentationMask, 0, 0, width, height);\n        this.ctx.globalCompositeOperation = 'source-out';\n        if (this.color !== this.ctx.fillStyle) {\n            this.ctx.fillStyle = this.color;\n        }\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.globalCompositeOperation = 'destination-atop';\n        this.ctx.drawImage(results.image, 0, 0, width, height);\n    }\n\n\n    // Applies a grayscale effect\n    applyGrayscale() {\n        const ctx = this.ctx;\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n        const imageData = this.ctx.getImageData(0, 0, width, height);\n        const data = imageData.data;\n\n        for (let i = 0; i < data.length; i += 4) {\n            const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n            data[i] = data[i + 1] = data[i + 2] = avg;\n        }\n\n        this.ctx.putImageData(imageData, 0, 0);\n    }\n\n    // Generates a list of available backgrounds\n    backgroundList() {\n        return {\n            color: [\n                {value: '#f9c0ab', alt: '#F9C0AB'},\n                {value: '#f4e0af', alt: '#F4E0AF'},\n                {value: '#a8cd89', alt: '#A8CD89'},\n                {value: '#355f2e', alt: '#355F2E'},\n            ],\n            image: [\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/1.jpg', alt: 'Image 1'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/2.jpg', alt: 'Image 2'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/3.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/4.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/5.webp', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/6.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/7.webp', alt: 'Image 113'},\n            ],\n        };\n    }\n\n    // Initializes the segmentation process\n    async setupSegmentation(ctx) {\n        const backgroundImage = this.getBackgroundImage()\n        await this.appendScriptToHead('https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/selfie_segmentation.js', {\n            async: true,\n            callback: async () => {\n                if (!this.segmentation) {\n                    this.segmentation = new SelfieSegmentation({\n                        // locateFile: (file) => `/node_modules/@mediapipe/selfie_segmentation/${file}`,\n                        locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`,\n                    });\n\n\n                    this.videoElement.width = this.isMobile ? 480 : 1280;\n                    this.videoElement.height = this.isMobile ? 360 : 720;\n\n                    this.segmentation.setOptions({\n                        selfieMode: false,\n                        modelSelection: this.isMobile ? 0 : 1, // Full model for desktops\n                    });\n\n\n                    this.segmentation.onResults((results) => {\n                        // console.log(results)\n                        if (this.color) {\n                            this.applyBackgroundColor(results);\n                            this.applyBrightnessAndContrast();\n                        } else {\n                            this.applyBackgroundImage(results, backgroundImage);\n\n                        }\n\n                        if (this.grayScale) {\n                            this.applyGrayscale();\n                        }\n                        // this.applyBrightnessAndContrast(ctx);\n                    });\n\n\n                    let lastFrameTime = 0;\n\n                    const processVideo = async () => {\n                        if (this.processing) {\n                            const now = performance.now();\n                            if (now - lastFrameTime >= 1000 / this.fps) {\n                                lastFrameTime = now;\n                                await this.segmentation.send({image: this.videoElement});\n                            }\n                        }\n\n                        requestAnimationFrame(processVideo);\n                    };\n\n                    await processVideo();\n\n\n                }\n\n            },\n        });\n    }\n\n    // Main function to modify the video stream\n    async changeBackground() {\n\n        if (!this.videoElement.srcObject) {\n            this.videoElement.srcObject = this.stream;\n            await this.videoElement.play();\n            // await new Promise((resolve) => (this.videoElement.onloadeddata = resolve));\n            this.videoElement.addEventListener('loadedmetadata', () => {\n                this.videoInfo = {videoWidth: this.videoElement.videoWidth, videoHeight: this.videoElement.videoHeight};\n            });\n            const {videoWidth: width, videoHeight: height} = this.videoInfo;\n            this.canvasElement.width = width;\n            this.canvasElement.height = height;\n            this.ctx = this.canvasElement.getContext('2d');\n        }\n\n\n        if (!this.url && !this.grayScale && this.brightness === 1 && this.contrast === 1 && !this.color && !this.blur) {\n            this.processing = false;\n            return this.stream; // No modifications, return original stream\n        }\n\n        let backgroundImage = null;\n        if (this.url) {\n            backgroundImage = new Image();\n            backgroundImage.crossOrigin = 'anonymous';\n            backgroundImage.src = this.url;\n            // await new Promise((resolve) => (backgroundImage.onload = resolve));\n\n        }\n        this.processing = true\n        this.setBackgroundImage2(backgroundImage)\n        this.setupSegmentation();\n        return this.canvasElement.captureStream(this.fps);\n    }\n}\n\nexport default WebrtcBgModifier;"],"names":["WebrtcBgModifier","constructor","this","scriptLoaded","segmentation","url","camera","backgroundImage","color","stream","processing","brightness","contrast","grayScale","blur","fps","ctx","isMobile","test","navigator","userAgent","videoInfo","videoWidth","videoHeight","videoElement","document","createElement","canvasElement","setFps","value","setBackgroundImage2","getBackgroundImage","setBrightness","setContrast","setBlur","setGrayScale","setStream","setBackgroundImage","setBackgroundColor","appendScriptToHead","src","async","defer","callback","_this","script","onload","onerror","console","error","head","appendChild","applyBackgroundImage","results","width","height","drawImage","segmentationMask","globalCompositeOperation","applyBrightnessAndContrast","filter","applyBackgroundColor","fillStyle","fillRect","image","applyGrayscale","imageData","getImageData","data","i","length","putImageData","backgroundList","alt","setupSegmentation","_this2","SelfieSegmentation","locateFile","file","setOptions","selfieMode","modelSelection","onResults","lastFrameTime","processVideo","now","performance","send","requestAnimationFrame","changeBackground","srcObject","play","addEventListener","getContext","Image","crossOrigin","captureStream"],"mappings":"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"}