{"version":3,"file":"index.modern.mjs","sources":["../src/index.js"],"sourcesContent":["class WebrtcBgModifier {\n    constructor({chatAgent = null}) {\n\n        console.log(chatAgent,\"chatAgent2\")\n\n        this.scriptLoaded = false;\n        this.segmentation = null;\n        this.bgUrl = null;\n        this.backgroundImage = null;\n        this.color = null;\n        this.chatAgent = chatAgent;\n        this.stream = null;\n        this.processing = false;\n        this.brightness = 1;\n        this.contrast = 1;\n        this.grayScale = false;\n        this.blur = 0;\n        this.fps = 24;\n        this.ctx = null;\n        this.isMobile = /Mobi|Android/i.test(navigator.userAgent);\n\n        this.videoInfo = {videoWidth: 640, videoHeight: 480};\n        this.videoElement = document.createElement(\"video\");\n        this.canvasElement = document.createElement(\"canvas\");\n        this.reaction = []\n        this.lastPushTime = 0;\n    }\n\n\n//private methods\n    drawReaction() {\n        if (this.reaction) {\n            this.reaction.map(data=>{\n\n             this.ctx.globalCompositeOperation = 'source-over';\n            const now = performance.now();\n            const elapsed = now - data.startTime;\n            // Remove the reaction if the duration has passed\n            if (elapsed > data.duration) {\n                data = null;\n                return;\n            }\n            // Calculate the fade-out effect (optional)\n            const progress = elapsed / data.duration;\n            this.ctx.globalAlpha = 1 - progress;\n\n            // Calculate the vertical movement (move from down to up)\n            const moveUpDistance = 300 * progress; // Adjust the distance as needed\n            const shakeAmount = 5 * Math.sin(now / 100); // Shake effect (change frequency as needed)\n\n            // Apply the shake and move-up effects to the position\n            const x = data.x + shakeAmount;\n            const y = data.y - moveUpDistance;\n\n            this.ctx.font = \"88px Arial\"; // Adjust size as needed\n            this.ctx.fillText(data.emoji, x, y);\n\n            // Reset globalAlpha for other drawings\n            this.ctx.globalAlpha = 1;\n            })\n\n        }\n    }\n\n    // Initializes the segmentation process\n    async setupSegmentation() {\n        const backgroundImage = this.getBackgroundImage()\n        await this.appendScriptToHead('https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/selfie_segmentation.js', {\n            async: true,\n            callback: async () => {\n\n                if (!this.segmentation) {\n                    this.segmentation = new SelfieSegmentation({\n                        // locateFile: (file) => `/node_modules/@mediapipe/selfie_segmentation/${file}`,\n                        locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`,\n                    });\n\n\n                    this.videoElement.width = this.isMobile ? 480 : 1280;\n                    this.videoElement.height = this.isMobile ? 360 : 720;\n\n                    this.segmentation.setOptions({\n                        modelSelection: 1,  // 1 means use the full-body segmentation model\n                        outputStride: 16,\n                        segmentBody: true,\n                        selfieMode: false,\n                        // modelSelection: this.isMobile ? 0 : 1, // Full model for desktops\n                    });\n\n\n                    this.segmentation.onResults((results) => {\n                        console.log(results)\n                        if (this.color) {\n                            this.applyBackgroundColor(results);\n                            this.applyBrightnessAndContrast();\n                        } else {\n                            this.applyBackgroundImage(results, backgroundImage);\n\n                        }\n                        this.applyGrayscale();\n                        // this.applyBrightnessAndContrast(ctx);\n                    });\n\n\n                    let lastFrameTime = 0;\n\n                    const processVideo = async () => {\n                        if (this.processing) {\n                            const now = performance.now();\n                            if (now - lastFrameTime >= 1000 / this.fps) {\n                                lastFrameTime = now;\n                                await this.segmentation.send({image: this.videoElement});\n                            }\n                        }\n\n                        requestAnimationFrame(processVideo);\n                    };\n\n                    await processVideo();\n\n\n                }\n\n            },\n        });\n    }\n\n    // Setters for background properties\n    setBackgroundImage2(value) {\n        this.backgroundImage = value;\n        return this;\n    }\n\n    // Appends a script to the document head, ensuring it loads only once\n    async appendScriptToHead(src, {\n        async = true, defer = false, callback = () => {\n        }\n    } = {}) {\n        if (this.scriptLoaded) {\n            await callback();\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.src = src;\n        script.async = async;\n        script.defer = defer;\n        script.onload = async () => {\n            this.scriptLoaded = true;\n            await callback();\n        };\n        script.onerror = () => console.error(`Failed to load script: ${src}`);\n        document.head.appendChild(script);\n    }\n\n    // Handles background image replacement logic\n    applyBackgroundImage(results) {\n\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n        // Check if segmentationMask and background are required to be drawn\n        if (!results.segmentationMask || !this.getBackgroundImage() && !this.videoElement) {\n            return; // No background or segmentation to apply, return early\n        }\n\n\n\n\n\n         // this.ctx.globalCompositeOperation = 'destination-over';\n\n         // this.ctx.clearRect(0, 0, width, height);\n         this.ctx.drawImage(results.segmentationMask, 0, 0, width, height);\n        this.ctx.globalCompositeOperation = 'source-out';\n\n        this.ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast}) blur(${this.blur})`;\n\n\n        this.ctx.drawImage(this.getBackgroundImage() ? this.getBackgroundImage() : this.videoElement, 0, 0, width, height);\n\n        this.drawReaction();\n\n        this.ctx.globalCompositeOperation = 'destination-atop';\n        this.ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast})`\n\n         this.ctx.drawImage(results.image, 0, 0, width, height);\n\n\n    }\n\n    // Adjusts brightness and contrast for the video\n    applyBrightnessAndContrast() {\n        this.ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast}) `;\n    }\n\n    // Applies a solid background color\n    applyBackgroundColor(results) {\n\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n\n        // this.ctx.clearRect(0, 0, width, height);\n\n        this.ctx.drawImage(results.segmentationMask, 0, 0, width, height);\n\n        this.ctx.globalCompositeOperation = 'source-out';\n\n        if (this.color !== this.ctx.fillStyle) {\n            this.ctx.fillStyle = this.color;\n        }\n\n        this.ctx.fillRect(0, 0, width, height);\n        this.drawReaction();\n\n        this.ctx.globalCompositeOperation = 'destination-atop';\n\n        this.ctx.drawImage(results.image, 0, 0, width, height);\n\n\n    }\n\n    // Applies a grayscale effect\n    applyGrayscale() {\n        if (this.grayScale) {\n            const {videoWidth: width, videoHeight: height} = this.videoInfo;\n            const imageData = this.ctx.getImageData(0, 0, width, height);\n            const data = imageData.data;\n            for (let i = 0; i < data.length; i += 4) {\n                const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n                data[i] = data[i + 1] = data[i + 2] = avg;\n            }\n\n            this.ctx.putImageData(imageData, 0, 0);\n        }\n    }\n\n// end private methods\n\n\n\n\n    addReaction(emoji, x = 0, y = 0, duration = 2000) {\n\n        if(!this.segmentation){\n            console.error(\"Please use reaction after segmentation is available.\");\n        }else{\n            const currentTime = performance.now();\n\n            if (currentTime - this.lastPushTime >= 1000) {\n                this.reaction.push({\n                    emoji,\n                    x,\n                    y,\n                    startTime: performance.now(),\n                    duration\n                })\n                this.lastPushTime = currentTime;\n\n            }\n            else{\n                console.log(\"Waiting for 1 second to pass before adding another reaction.\");\n\n            }\n         }\n\n        return this;\n    }\n\n    setFps(value) {\n        this.fps = value;\n        return this;\n    }\n\n    getBackgroundImage() {\n        return this.backgroundImage\n    }\n\n    setBrightness(value) {\n        this.brightness = +value;\n        return this;\n    }\n\n    setContrast(value) {\n        this.contrast = +value;\n        return this;\n    }\n\n    setBlur(value) {\n        this.blur = +value + \"px\";\n        return this;\n    }\n\n    setGrayScale(value) {\n        this.grayScale = value;\n        return this;\n    }\n\n    setStream(stream) {\n        this.stream = stream;\n        return this;\n    }\n\n    setBackgroundImage(bgUrl) {\n        this.bgUrl = bgUrl;\n        this.color = null;\n        return this;\n    }\n\n    setBackgroundColor(color) {\n        this.color = color;\n        this.bgUrl = null;\n\n        return this;\n    }\n\n    // Generates a list of available backgrounds\n    backgroundList() {\n        return {\n            reactions: [\n                {value: '🎉'},\n                {value: '❤️'},\n                {value: '👍️'},\n                {value: '😊'},\n                {value: '😎'},\n                {value: '👎'},\n            ],\n            color: [\n                {value: '#f9c0ab', alt: '#F9C0AB'},\n                {value: '#f4e0af', alt: '#F4E0AF'},\n                {value: '#a8cd89', alt: '#A8CD89'},\n                {value: '#355f2e', alt: '#355F2E'},\n            ],\n            image: [\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/1.jpg', alt: 'Image 1'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/2.jpg', alt: 'Image 2'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/3.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/4.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/5.webp', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/6.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/7.webp', alt: 'Image 113'},\n            ],\n        };\n    }\n\n    // Main function to modify the video stream\n    async changeBackground() {\n        // this.stream=chatAgent.deviceManager().mediaStreams.getVideoInput();\n        this.chatAgent.deviceManager().grantUserMediaDevicesPermissions({video: {width: this.videoInfo.videoWidth,height: this.videoInfo.videoHeight, framerate: 10}},     (result)=> {\n            console.log(result, \"result\")\n            this.stream=result.videoStream\n        if (!this.videoElement.srcObject) {\n            this.videoElement.srcObject = this.stream;\n              this.videoElement.play();\n            // await new Promise((resolve) => (this.videoElement.onloadeddata = resolve));\n            this.videoElement.addEventListener('loadedmetadata', () => {\n                this.videoInfo = {videoWidth: this.videoElement.videoWidth, videoHeight: this.videoElement.videoHeight};\n            });\n            const {videoWidth: width, videoHeight: height} = this.videoInfo;\n            this.canvasElement.width = width;\n            this.canvasElement.height = height;\n            this.ctx = this.canvasElement.getContext('2d');\n        }\n\n\n        if (!this.bgUrl && !this.grayScale && this.brightness === 1 && this.contrast === 1 && !this.color && !this.blur) {\n            this.processing = false;\n            this.chatAgent.replaceVideoStream(this.stream)\n\n            return this.stream; // No modifications, return original stream\n        }\n\n        let backgroundImage = null;\n        if (this.bgUrl) {\n            backgroundImage = new Image();\n            backgroundImage.crossOrigin = 'anonymous';\n            backgroundImage.src = this.bgUrl;\n            // await new Promise((resolve) => (backgroundImage.onload = resolve));\n        }\n        this.processing = true\n        this.setBackgroundImage2(backgroundImage)\n        this.setupSegmentation();\n        const newStream= this.canvasElement.captureStream(this.fps);\n\n        this.chatAgent.replaceVideoStream(newStream)\n        return  newStream;\n        })\n    }\n\n    async makePreview() {\n            if (!this.videoElement.srcObject) {\n                this.videoElement.srcObject = this.stream;\n                this.videoElement.play();\n                // await new Promise((resolve) => (this.videoElement.onloadeddata = resolve));\n                this.videoElement.addEventListener('loadedmetadata', () => {\n                    this.videoInfo = {videoWidth: this.videoElement.videoWidth, videoHeight: this.videoElement.videoHeight};\n                });\n                const {videoWidth: width, videoHeight: height} = this.videoInfo;\n                this.canvasElement.width = width;\n                this.canvasElement.height = height;\n                this.ctx = this.canvasElement.getContext('2d');\n            }\n\n             if (!this.bgUrl && !this.grayScale && this.brightness === 1 && this.contrast === 1 && !this.color && !this.blur  ) {\n                this.processing = false;\n\n                return this.stream; // No modifications, return original stream\n            }\n\n            let backgroundImage = null;\n            if (this.bgUrl) {\n                backgroundImage = new Image();\n                backgroundImage.crossOrigin = 'anonymous';\n                backgroundImage.src = this.bgUrl;\n                // await new Promise((resolve) => (backgroundImage.onload = resolve));\n            }\n            this.processing = true\n            this.setBackgroundImage2(backgroundImage)\n            this.setupSegmentation();\n            const newStream= this.canvasElement.captureStream(this.fps);\n\n            return  newStream;\n\n    }\n\n}\n\nexport default WebrtcBgModifier;"],"names":["WebrtcBgModifier","constructor","chatAgent","console","log","this","scriptLoaded","segmentation","bgUrl","backgroundImage","color","stream","processing","brightness","contrast","grayScale","blur","fps","ctx","isMobile","test","navigator","userAgent","videoInfo","videoWidth","videoHeight","videoElement","document","createElement","canvasElement","reaction","lastPushTime","drawReaction","map","data","globalCompositeOperation","now","performance","elapsed","startTime","duration","progress","globalAlpha","moveUpDistance","shakeAmount","Math","sin","x","y","font","fillText","emoji","setupSegmentation","_this","getBackgroundImage","appendScriptToHead","async","callback","SelfieSegmentation","locateFile","file","width","height","setOptions","modelSelection","outputStride","segmentBody","selfieMode","onResults","results","applyBackgroundColor","applyBrightnessAndContrast","applyBackgroundImage","applyGrayscale","lastFrameTime","processVideo","send","image","requestAnimationFrame","setBackgroundImage2","value","src","defer","_this2","script","onload","onerror","error","head","appendChild","segmentationMask","drawImage","filter","fillStyle","fillRect","imageData","getImageData","i","length","putImageData","addReaction","currentTime","push","setFps","setBrightness","setContrast","setBlur","setGrayScale","setStream","setBackgroundImage","setBackgroundColor","backgroundList","reactions","alt","changeBackground","deviceManager","grantUserMediaDevicesPermissions","video","framerate","result","videoStream","srcObject","play","addEventListener","getContext","replaceVideoStream","Image","crossOrigin","newStream","captureStream","makePreview"],"mappings":"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"}