{"version":3,"file":"index.module.js","sources":["../src/index.js"],"sourcesContent":["class WebrtcBgModifier {\n    constructor() {\n        this.scriptLoaded = false;\n        this.segmentation = null;\n        this.url = null;\n        this.camera = null;\n        this.backgroundImage = null;\n        this.color = null;\n        this.stream = null;\n        this.processing = false;\n        this.brightness = 1;\n        this.contrast = 1;\n        this.grayScale = false;\n        this.blur = 0;\n        this.fps = 24;\n        this.videoInfo = {videoWidth:640,videoHeight:480};\n        this.videoElement = document.createElement(\"video\");\n        this.canvasElement = document.createElement(\"canvas\");\n    }\n    setFps(value) {\n        this.fps = value;\n        return this;\n    }\n    // Setters for background properties\n    setBackgroundImage2(value) {\n        this.backgroundImage = value;\n        return this;\n    }\n\n    getBackgroundImage() {\n        return this.backgroundImage\n    }\n\n    setBrightness(value) {\n        this.brightness = +value;\n        return this;\n    }\n\n    setContrast(value) {\n         this.contrast = +value;\n        return this;\n    }\n\n    setBlur(value) {\n        this.blur = +value + \"px\";\n        return this;\n    }\n\n    setGrayScale(value) {\n        this.grayScale = value;\n        return this;\n    }\n\n    setStream(stream) {\n        this.stream = stream;\n        return this;\n    }\n\n    setBackgroundImage(url) {\n        this.url = url;\n        this.color = null;\n        return this;\n    }\n\n    setBackgroundColor(color) {\n        this.color = color;\n\n        return this;\n    }\n\n    // Appends a script to the document head, ensuring it loads only once\n    async appendScriptToHead(src, {\n        async = true, defer = false, callback = () => {\n        }\n    } = {}) {\n        if (this.scriptLoaded) {\n            await callback();\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.src = src;\n        script.async = async;\n        script.defer = defer;\n        script.onload = async () => {\n            this.scriptLoaded = true;\n            await callback();\n        };\n        script.onerror = () => console.error(`Failed to load script: ${src}`);\n        document.head.appendChild(script);\n    }\n\n    // Handles background image replacement logic\n    applyBackgroundImage(ctx, results) {\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n        // ctx.clearRect(0, 0, width, height);\n        ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast}) blur(${this.blur})`;\n\n        ctx.drawImage(results.segmentationMask, 0, 0, width, height);\n        ctx.globalCompositeOperation = 'source-out';\n\n        ctx.drawImage(this.getBackgroundImage() ? this.getBackgroundImage() : this.videoElement, 0, 0, width, height);\n        ctx.globalCompositeOperation = 'destination-atop';\n\n        ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast})`\n        ctx.drawImage(results.image, 0, 0, width, height);\n\n    }\n\n    // Adjusts brightness and contrast for the video\n    applyBrightnessAndContrast(ctx) {\n        ctx.filter = `brightness(${this.brightness}) contrast(${this.contrast}) `;\n    }\n\n    // Applies a solid background color\n    applyBackgroundColor(ctx, results) {\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n        // ctx.clearRect(0, 0, width, height);\n        ctx.drawImage(results.segmentationMask, 0, 0, width, height);\n        ctx.globalCompositeOperation = 'source-out';\n        ctx.fillStyle = this.color;\n        ctx.fillRect(0, 0, width, height);\n        ctx.globalCompositeOperation = 'destination-atop';\n        ctx.drawImage(results.image, 0, 0, width, height);\n    }\n\n\n    // Applies a grayscale effect\n    applyGrayscale(ctx) {\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n        const imageData = ctx.getImageData(0, 0, width, height);\n        const data = imageData.data;\n\n        for (let i = 0; i < data.length; i += 4) {\n            const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n            data[i] = data[i + 1] = data[i + 2] = avg;\n        }\n\n        ctx.putImageData(imageData, 0, 0);\n    }\n\n    // Generates a list of available backgrounds\n    backgroundList() {\n        return {\n            color: [\n                {value: '#F9C0AB', alt: '#F9C0AB'},\n                {value: '#F4E0AF', alt: '#F4E0AF'},\n                {value: '#A8CD89', alt: '#A8CD89'},\n                {value: '#355F2E', alt: '#355F2E'},\n            ],\n            image: [\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/1.jpg', alt: 'Image 1'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/2.jpg', alt: 'Image 2'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/3.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/4.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/5.webp', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/6.jpg', alt: 'Image 113'},\n                {value: 'https://alireza5014.github.io/webrtc-bg-modifier/example/img/7.webp', alt: 'Image 113'},\n            ],\n        };\n    }\n\n    // Initializes the segmentation process\n    async setupSegmentation(ctx) {\n        const backgroundImage = this.getBackgroundImage()\n        await this.appendScriptToHead('https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/selfie_segmentation.js', {\n            async: true,\n            callback: async () => {\n                if (!this.segmentation) {\n                    this.segmentation = new SelfieSegmentation({\n                        // locateFile: (file) => `/node_modules/@mediapipe/selfie_segmentation/${file}`,\n                        locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`,\n                    });\n                    const isMobile = /Mobi|Android/i.test(navigator.userAgent);\n\n\n                    this.videoElement.width = isMobile ? 480 : 1280;\n                    this.videoElement.height = isMobile ? 360 : 720;\n\n                    this.segmentation.setOptions({\n                        selfieMode: false,\n                        modelSelection: isMobile ? 0 : 1, // Full model for desktops\n                    });\n\n\n                    this.segmentation.onResults((results) => {\n                        // console.log(results)\n                        if (this.color) {\n                            this.applyBackgroundColor(ctx, results);\n                            this.applyBrightnessAndContrast(ctx);\n                        } else {\n                            this.applyBackgroundImage(ctx, results, backgroundImage);\n\n                        }\n\n                        if (this.grayScale) {\n                            this.applyGrayscale(ctx);\n                        }\n                        // this.applyBrightnessAndContrast(ctx);\n                    });\n\n\n                    let lastFrameTime = 0;\n\n                    const processVideo = async () => {\n                        if (this.processing) {\n                            const now = performance.now();\n                            if (now - lastFrameTime >= 1000 / this.fps) {\n                                lastFrameTime = now;\n                                await this.segmentation.send({image: this.videoElement});\n                            }\n                        }\n\n                        requestAnimationFrame(processVideo);\n                    };\n\n                    await processVideo();\n\n\n                }\n\n            },\n        });\n    }\n\n    // Main function to modify the video stream\n    async changeBackground() {\n\n        if (!this.videoElement.srcObject) {\n            this.videoElement.srcObject = this.stream;\n            this.videoElement.play();\n            // await new Promise((resolve) => (this.videoElement.onloadeddata = resolve));\n            this.videoElement.addEventListener('loadedmetadata', () => {\n                console.log({videoWidth:this.videoElement.videoWidth,videoHeight:this.videoElement.videoHeight},\"jjjjjjjj\")\n                this.videoInfo={videoWidth:this.videoElement.videoWidth,videoHeight:this.videoElement.videoHeight};\n            });\n        }\n\n\n        const {videoWidth: width, videoHeight: height} = this.videoInfo;\n        this.canvasElement.width = width;\n        this.canvasElement.height = height;\n        const ctx = this.canvasElement.getContext('2d');\n\n        if (!this.url && !this.grayScale && this.brightness === 1 && this.contrast === 1 && !this.color && !this.blur) {\n            this.processing = false;\n            // this.camera?.stop()\n\n            return this.stream; // No modifications, return original stream\n        }\n\n        let backgroundImage = null;\n        if (this.url) {\n            backgroundImage = new Image();\n            backgroundImage.crossOrigin = 'anonymous';\n            backgroundImage.src = this.url;\n            await new Promise((resolve) => (backgroundImage.onload = resolve));\n            // this.setBackgroundImage2(backgroundImage)\n\n        }\n        this.processing = true\n        this.setBackgroundImage2(backgroundImage)\n        await this.setupSegmentation(ctx);\n        return this.canvasElement.captureStream(this.fps);\n    }\n}\n\nexport default WebrtcBgModifier;"],"names":["WebrtcBgModifier","constructor","this","scriptLoaded","segmentation","url","camera","backgroundImage","color","stream","processing","brightness","contrast","grayScale","blur","fps","videoInfo","videoWidth","videoHeight","videoElement","document","createElement","canvasElement","setFps","value","setBackgroundImage2","getBackgroundImage","setBrightness","setContrast","setBlur","setGrayScale","setStream","setBackgroundImage","setBackgroundColor","appendScriptToHead","src","async","defer","callback","_exit","_this","_temp2","_result","script","onload","Promise","resolve","then","e","reject","onerror","console","error","head","appendChild","_temp","applyBackgroundImage","ctx","results","width","height","filter","drawImage","segmentationMask","globalCompositeOperation","image","applyBrightnessAndContrast","applyBackgroundColor","fillStyle","fillRect","applyGrayscale","imageData","getImageData","data","i","length","putImageData","backgroundList","alt","setupSegmentation","_this2","_temp3","SelfieSegmentation","locateFile","file","isMobile","test","navigator","userAgent","setOptions","selfieMode","modelSelection","onResults","lastFrameTime","processVideo","_temp6","requestAnimationFrame","_temp5","now","performance","_temp4","send","changeBackground","_this3","_temp8","captureStream","srcObject","play","addEventListener","log","getContext","_temp7","Image","crossOrigin"],"mappings":"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"}